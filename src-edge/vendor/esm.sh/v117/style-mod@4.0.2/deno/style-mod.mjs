/* esm.sh - esbuild bundle(style-mod@4.0.2) deno production */
var S="\u037C",w=typeof Symbol>"u"?"__"+S:Symbol.for(S),m=typeof Symbol>"u"?"__styleSet"+Math.floor(Math.random()*1e8):Symbol("styleSet"),b=typeof globalThis<"u"?globalThis:typeof document<"u"?window:{},T=class{constructor(e,l){this.rules=[];let{finish:u}=l||{};function n(t){return/^@/.test(t)?[t]:t.split(/,\s*/)}function s(t,i,h,x){let d=[],o=/^@(\w+)\b/.exec(t[0]),g=o&&o[1]=="keyframes";if(o&&i==null)return h.push(t[0]+";");for(let r in i){let a=i[r];if(/&/.test(r))s(r.split(/,\s*/).map(f=>t.map(y=>f.replace(/&/,y))).reduce((f,y)=>f.concat(y)),a,h);else if(a&&typeof a=="object"){if(!o)throw new RangeError("The value of a property ("+r+") should be a primitive value.");s(n(r),a,d,g)}else a!=null&&d.push(r.replace(/_.*/,"").replace(/[A-Z]/g,f=>"-"+f.toLowerCase())+": "+a+";")}(d.length||g)&&h.push((u&&!o&&!x?t.map(u):t).join(", ")+" {"+d.join(" ")+"}")}for(let t in e)s(n(t),e[t],this.rules)}getRules(){return this.rules.join(`
`)}static newName(){let e=b[w]||1;return b[w]=e+1,S+e.toString(36)}static mount(e,l){(e[m]||new c(e)).mount(Array.isArray(l)?l:[l])}},p=null,c=class{constructor(e){if(!e.head&&e.adoptedStyleSheets&&typeof CSSStyleSheet<"u"){if(p)return e.adoptedStyleSheets=[p.sheet,...e.adoptedStyleSheets],e[m]=p;this.sheet=new CSSStyleSheet,e.adoptedStyleSheets=[this.sheet,...e.adoptedStyleSheets],p=this}else{this.styleTag=(e.ownerDocument||e).createElement("style");let l=e.head||e;l.insertBefore(this.styleTag,l.firstChild)}this.modules=[],e[m]=this}mount(e){let l=this.sheet,u=0,n=0;for(let s=0;s<e.length;s++){let t=e[s],i=this.modules.indexOf(t);if(i<n&&i>-1&&(this.modules.splice(i,1),n--,i=-1),i==-1){if(this.modules.splice(n++,0,t),l)for(let h=0;h<t.rules.length;h++)l.insertRule(t.rules[h],u++)}else{for(;n<i;)u+=this.modules[n++].rules.length;u+=t.rules.length,n++}}if(!l){let s="";for(let t=0;t<this.modules.length;t++)s+=this.modules[t].getRules()+`
`;this.styleTag.textContent=s}}};export{T as StyleModule};
//# sourceMappingURL=style-mod.mjs.map